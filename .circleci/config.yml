jobs:
    #              cd script && npm install && node ./test-script/instance-tester/app.js --image $VERSION --instance restaurant82
    build_app:
        machine:
            docker_layer_caching: true
        steps:
            - checkout
            - run:
                  name: export variables
                  command: |
                      echo 'export VERSION_NUM="0.0.0-build_"' >> $BASH_ENV
                      echo 'export CIRCLE_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
                      if [[ $CIRCLE_TAG == *"release-"* ]];
                      then
                        echo 'export CIRCLE_BRANCH="$CIRCLE_TAG"' >> $BASH_ENV
                      else
                        echo 'export CIRCLE_BRANCH="$CIRCLE_BRANCH"' >> $BASH_ENV
                      fi
                      echo 'export CIRCLE_BUILD_NUM="$CIRCLE_BUILD_NUM"' >> $BASH_ENV
                      echo 'export CIRCLE_TAG="$CIRCLE_TAG"' >> $BASH_ENV
                      if [ -z $CIRCLE_TAG ]
                      then
                        echo 'export VERSION="$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM"' >> $BASH_ENV
                      else
                        echo 'export VERSION="$CIRCLE_TAG"' >> $BASH_ENV
                      fi
                      echo 'export IMAGE_NAME="convolab/pyls:$VERSION"' >> $BASH_ENV
            - run:
                  name: prepare and build image
                  no_output_timeout: 40m
                  command: |
                      set -x
                      source $BASH_ENV
                      docker -v
                      docker login --username $DOCKER_USER --password $DOCKER_PASS
                      echo "Starting building 'convolab/pyls' for $IMAGE_NAME"
                      docker build -t $IMAGE_NAME . -f Dockerfile --build-arg VERSION=$VERSION_NUM$CIRCLE_BUILD_NUM --build-arg BRANCH=$CIRCLE_BRANCH
            - run:
                  name: push image
                  command: |
                      source $BASH_ENV
                      docker push $IMAGE_NAME
                      if [[ $CIRCLE_TAG == *"release-"* ]]; then
                        export RELEASE_VERSION=$(echo $CIRCLE_TAG | cut -d "-" -f 2)
                        docker tag $IMAGE_NAME convolab/pyls:$RELEASE_VERSION
                        docker push convolab/pyls:$RELEASE_VERSION
                      fi
            - run:
                name: Get Docker image size
                command: |
                  mkdir /tmp/artifacts;
                  docker images --format "{{.Size}}" app > /tmp/artifacts/size;
            - run:
                name: Run test
                command: |
                  source $BASH_ENV
                  docker login --username $DOCKER_USER --password $DOCKER_PASS
                  docker run -d --name logstash -e 'input { http { } } output { stdout { codec => line { format => "%{message}" }} }' $IMAGE_NAME
                  docker inspect -f {{.State.Running}} logstash
                  docker inspect -f {{.State.ExitCode}} logstash
                  docker exec logstash true
version: 2.1
workflows:
  version: 2
  build_app:
      jobs:
        - build_app:
            filters:
              tags:
                ignore: /^rebuild.*/
              branches:
                ignore:
                  - master